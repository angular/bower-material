/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.2.4-master-bfc8ae7
 */
!function(e,$){"use strict";function a(c,u,e){var v="determinate",f="indeterminate",b="buffer",g="query",p="_md-progress-linear-disabled";return{restrict:"E",template:'<div class="md-container"><div class="md-dashed"></div><div class="md-bar md-bar1"></div><div class="md-bar md-bar2"></div></div>',compile:function(e,a,r){return e.attr("aria-valuemin",0),e.attr("aria-valuemax",100),e.attr("role","progressbar"),t}};function t(e,r,a){var t;c(r);var d=a.hasOwnProperty("disabled"),s=u.dom.animator.toCss,i=$.element(r[0].querySelector(".md-bar1")),n=$.element(r[0].querySelector(".md-bar2")),o=$.element(r[0].querySelector(".md-container"));function m(){var e=(a.mdMode||"").trim();if(e)switch(e){case v:case f:case b:case g:break;default:e=f}return e}function l(e,a){if(!d&&m()){var r=u.supplant("translateX({0}%) scale({1},1)",[(a-100)/2,a/100]),t=s({transform:r});$.element(e).css(t)}}r.attr("md-mode",m()).toggleClass(p,d),function(){if($.isUndefined(a.mdMode)){var e=$.isDefined(a.value)?v:f;r.attr("md-mode",e),a.mdMode=e}}(),a.$observe("value",function(e){var a=w(e);r.attr("aria-valuenow",a),m()!=g&&l(n,a)}),a.$observe("mdBufferValue",function(e){l(i,w(e))}),a.$observe("disabled",function(e){d=!0===e||!1===e?!!e:$.isDefined(e),r.toggleClass(p,d),o.toggleClass(t,!d)}),a.$observe("mdMode",function(e){switch(t&&o.removeClass(t),e){case g:case b:case v:case f:o.addClass(t="md-mode-"+e);break;default:o.addClass(t="md-mode-"+f)}})}function w(e){return Math.max(0,Math.min(e||0,100))}}a.$inject=["$mdTheming","$mdUtil","$log"],$.module("material.components.progressLinear",["material.core"]).directive("mdProgressLinear",a)}(window,window.angular);
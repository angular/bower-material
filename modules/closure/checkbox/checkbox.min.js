/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.2.3-master-625adc5
 */
function MdCheckboxDirective(h,g,p,k,f,v){return h=h[0],{restrict:"E",transclude:!0,require:["^?mdInputContainer","?ngModel","?^form"],priority:p.BEFORE_NG_ARIA,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',compile:function(e,t){return t.$set("tabindex",t.tabindex||"0"),t.$set("type","checkbox"),t.$set("role",t.type),e.addClass("md-auto-horizontal-margin"),{pre:function(e,t){t.on("click",function(e){this.hasAttribute("disabled")&&e.stopImmediatePropagation()})},post:function(a,i,r,e){var t,n=e[0],c=e[1]||f.fakeNgModel(),o=e[2],d=0<i.find("a").length;if(d){var l="label-"+f.nextUid();r.$set("aria-labelledby",l);var s=i.children()[1];angular.element(s).remove(),s.removeAttribute("ng-transclude"),s.className="md-checkbox-link-label",s.setAttribute("id",l),i.after(s),i.next().on("click",m)}if(n){var u=n.isErrorGetter||function(){return c.$invalid&&(c.$touched||o&&o.$submitted)};n.input=i,a.$watch(u,n.setInvalid)}k(i),i.children().on("focus",function(){i.focus()}),f.parseAttributeBoolean(r.mdIndeterminate)&&(b(),a.$watch(r.mdIndeterminate,b));r.ngChecked&&a.$watch(a.$eval.bind(a,r.ngChecked),function(e){c.$setViewValue(e),c.$render()});(function(e,t,n){r[e]&&a.$watch(r[e],function(e){n[e]&&i.attr(t,n[e])})})("ngDisabled","tabindex",{true:"-1",false:r.tabindex}),d||g.expectWithText(i,"aria-label");function m(t){i[0].hasAttribute("disabled")||a.skipToggle||"A"===t.target.tagName||a.$apply(function(){var e=r.ngChecked&&r.ngClick?r.checked:!c.$viewValue;c.$setViewValue(e,t&&t.type),c.$render()})}function b(e){(t=!1!==e)&&i.attr("aria-checked","mixed"),i.toggleClass("md-indeterminate",t),c.$render()}h.link.pre(a,{on:angular.noop,0:{}},r,[c]),i.on("click",m).on("keypress",function(e){var t,n,a=e.which||e.keyCode;switch(e.preventDefault(),a){case p.KEY_CODE.SPACE:i.addClass("md-focused"),m(e);break;case p.KEY_CODE.ENTER:(n=f.getClosest(e.target,"form"))&&(t=n.querySelector('button[type="submit"]:enabled, input[type="submit"]:enabled'))&&t.click()}}).on("focus",function(){"keyboard"===v.getLastInteractionType()&&i.addClass("md-focused")}).on("blur",function(){i.removeClass("md-focused")}),c.$render=function(){var e=!!c.$viewValue&&!t;i.toggleClass("md-checked",e),t||(e?i.attr("aria-checked","true"):i.attr("aria-checked","false"))}}}}}}goog.provide("ngmaterial.components.checkbox"),goog.require("ngmaterial.core"),MdCheckboxDirective.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$mdInteraction"],angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",MdCheckboxDirective),ngmaterial.components.checkbox=angular.module("material.components.checkbox");